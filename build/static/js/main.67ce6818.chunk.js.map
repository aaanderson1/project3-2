{"version":3,"sources":["assets/images/emojis sync /^/.*/.png$","assets/images/emojis/avocado.png","assets/images/emojis/blushing.png","assets/images/emojis/bowling.png","assets/images/emojis/butterfly.png","assets/images/emojis/caterpillar.png","assets/images/emojis/clapping.png","assets/images/emojis/cookie.png","assets/images/emojis/eyebrow-raised.png","assets/images/emojis/fire.png","assets/images/emojis/firework-sparkler.png","assets/images/emojis/flag.png","assets/images/emojis/floppy-disk.png","assets/images/emojis/ghost.png","assets/images/emojis/graduation-cap.png","assets/images/emojis/grinning-face-with-smiling-eyes.png","assets/images/emojis/grinning-face-with-star-eyes.png","assets/images/emojis/grinning.png","assets/images/emojis/guitar.png","assets/images/emojis/hourglass.png","assets/images/emojis/key.png","assets/images/emojis/light-bulb.png","assets/images/emojis/man-mage.png","assets/images/emojis/maple-leaf.png","assets/images/emojis/mobile-phone.png","assets/images/emojis/monocle.png","assets/images/emojis/music.png","assets/images/emojis/nerd.png","assets/images/emojis/neutral.png","assets/images/emojis/newspaper.png","assets/images/emojis/notebook.png","assets/images/emojis/pineapple.png","assets/images/emojis/pirateflag.png","assets/images/emojis/poo.png","assets/images/emojis/pretzel.png","assets/images/emojis/prideflag.png","assets/images/emojis/pushpin.png","assets/images/emojis/relieved.png","assets/images/emojis/rocket.png","assets/images/emojis/rolling.png","assets/images/emojis/ship.png","assets/images/emojis/shocked-face-with-exploding-head_1f92f.png","assets/images/emojis/skateboard.png","assets/images/emojis/slightly.png","assets/images/emojis/snowflake.png","assets/images/emojis/speaking.png","assets/images/emojis/star.png","assets/images/emojis/stopwatch.png","assets/images/emojis/sunglasses.png","assets/images/emojis/tears-of-joy.png","assets/images/emojis/thinking.png","assets/images/emojis/tropical-fish.png","assets/images/emojis/turtle.png","assets/images/emojis/umbrella.png","assets/images/emojis/unicorn-face.png","assets/images/emojis/upside-down.png","assets/images/emojis/victory-hand_270c.png","assets/images/emojis/videocassette.png","assets/images/emojis/wave.png","assets/images/emojis/waving-hand.png","assets/images/emojis/zanyface.png","assets/images/emojis/zipper-mouth.png","Token.js","components/Home.js","components/LoginControl/LoginControl.js","components/Login.js","components/MessageView.js","adapter/api.js","components/validations.js","components/emoji.js","components/Messages.js","components/Main.js","components/Navbar.js","components/Jumbotron.js","components/Blockquote.jsx","components/getDisplayClassName.js","components/Button.jsx","components/generateRandomString.js","components/Tag.jsx","components/Form.jsx","components/services/QuoteService.js","components/quote.js","components/InspirationModal.js","components/App.js","index.js"],"names":["map","./avocado.png","./blushing.png","./bowling.png","./butterfly.png","./caterpillar.png","./clapping.png","./cookie.png","./eyebrow-raised.png","./fire.png","./firework-sparkler.png","./flag.png","./floppy-disk.png","./ghost.png","./graduation-cap.png","./grinning-face-with-smiling-eyes.png","./grinning-face-with-star-eyes.png","./grinning.png","./guitar.png","./hourglass.png","./key.png","./light-bulb.png","./man-mage.png","./maple-leaf.png","./mobile-phone.png","./monocle.png","./music.png","./nerd.png","./neutral.png","./newspaper.png","./notebook.png","./pineapple.png","./pirateflag.png","./poo.png","./pretzel.png","./prideflag.png","./pushpin.png","./relieved.png","./rocket.png","./rolling.png","./ship.png","./shocked-face-with-exploding-head_1f92f.png","./skateboard.png","./slightly.png","./snowflake.png","./speaking.png","./star.png","./stopwatch.png","./sunglasses.png","./tears-of-joy.png","./thinking.png","./tropical-fish.png","./turtle.png","./umbrella.png","./unicorn-face.png","./upside-down.png","./victory-hand_270c.png","./videocassette.png","./wave.png","./waving-hand.png","./zanyface.png","./zipper-mouth.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","p","Token","tokenName","arguments","length","undefined","classCallCheck","this","token","loadToken","tokenString","window","localStorage","getItem","JSON","parse","dateTimeString","dateTime","Date","newDate","setMinutes","getMinutes","setItem","stringify","toISOString","Home","_this","fetch","concat","location","origin","toString","then","response","json","data","_id","console","log","props","history","push","react_default","a","createElement","React","Component","avatars","LoginControl","possibleConstructorReturn","getPrototypeOf","call","state","avatar","Math","floor","random","login","bind","assertThisInitialized","onComplete","_this2","method","body","headers","Content-Type","saveToken","catch","err","_this3","image","require","Image","src","roundedCircle","es_Button","variant","onClick","Login","LoginControl_LoginControl","MessageView","message","mood","Card","Body","owned","deleteCallback","API_ROOT","hostname","getToken","postMessage","messageObj","Accept","Authorization","validations","input","errors","Emoji","text","conversation_id","user_id","showEmojis","setState","document","addEventListener","closeMenu","emojiPicker","contains","target","removeEventListener","componentWillReceiveProps","nextProps","handleChange","validation","validate","value","handleSubmit","preventDefault","addEmoji","emoji","native","className","onSubmit","style","styles","type","onChange","placeholder","color","ref","el","dist_es","onSelect","emojiTooltip","title","getEmojiButton","String","fromCodePoint","container","padding","borderTop","marginBottom","form","display","background","outline","border","flex","fontSize","cssFloat","margin","cursor","position","bottom","right","marginLeft","Message","messages","anon","loading","getMessages","setInterval","_this4","reverse","_this5","charCode","_this6","_this7","Spinner","animation","lib","m","s","l","header","actions","InputGroup","onKeyPress","handleKeyPress","Text","components_emoji","MessageView_MessageView","deleteMessage","Main","react_router_dom","react_router","exact","path","component","Messages","Navbarrender","brand","alignLinks","height","width","href","class","Parallaxrender","Blockquote","author","children","getDisplayClassName","transformedColor","colorClassName","Button","buttonClasses","rest","objectWithoutProperties","buttonDisplayClassName","assign","classnames","defaultProps","generateRandomString","substring","Tag","inputName","isChecked","tagClasses","checkboxId","tagDisplayClassName","name","checked","htmlFor","Form","submitButtonColor","submitButtonText","submitButtonVariant","tagColor","tags","tagVariant","src_components_Button","tag","tagInputName","replace","src_components_Tag","key","QuoteService","selectedTags","quotesData","filteredQuotes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","quote","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","indexOf","return","quoteArrayLength","uniqueTags","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","Quote","getFormDataObject","formData","get","handleReset","currentQuote","event","FormData","getQuotesBySelectedTags","randomQuote","getRandomQuoteIndex","getUniqueTags","sort","_this$state","Fragment","src_components_Form","src_components_Blockquote","index","Modal","options","onOpenStart","onOpenEnd","onCloseStart","onCloseEnd","inDuration","outDuration","opacity","dismissible","startingTop","endingTop","M","init","data-target","src_components_quote","App","Navbar","components_Jumbotron","components_InspirationModal","components_Main","render","components_App","getElementById"],"mappings":"q/JAAA,IAAAA,EAAA,CACAC,gBAAA,GACAC,iBAAA,GACAC,gBAAA,GACAC,kBAAA,GACAC,oBAAA,GACAC,iBAAA,GACAC,eAAA,GACAC,uBAAA,GACAC,aAAA,GACAC,0BAAA,GACAC,aAAA,GACAC,oBAAA,GACAC,cAAA,GACAC,uBAAA,GACAC,wCAAA,GACAC,qCAAA,GACAC,iBAAA,GACAC,eAAA,GACAC,kBAAA,GACAC,YAAA,GACAC,mBAAA,GACAC,iBAAA,GACAC,mBAAA,GACAC,qBAAA,GACAC,gBAAA,GACAC,cAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,kBAAA,GACAC,iBAAA,GACAC,kBAAA,GACAC,mBAAA,GACAC,YAAA,GACAC,gBAAA,GACAC,kBAAA,GACAC,gBAAA,GACAC,iBAAA,GACAC,eAAA,GACAC,gBAAA,GACAC,aAAA,GACAC,+CAAA,GACAC,mBAAA,GACAC,iBAAA,GACAC,kBAAA,GACAC,iBAAA,GACAC,aAAA,GACAC,kBAAA,GACAC,mBAAA,IACAC,qBAAA,IACAC,iBAAA,IACAC,sBAAA,IACAC,eAAA,IACAC,iBAAA,IACAC,qBAAA,IACAC,oBAAA,IACAC,0BAAA,IACAC,sBAAA,IACAC,aAAA,IACAC,oBAAA,IACAC,iBAAA,IACAC,qBAAA,KAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAG,EAAAC,EAAAnE,EAAA+D,GAAA,CACA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAEA,MADAK,EAAAE,KAAA,mBACAF,EAEA,OAAApE,EAAA+D,GAEAD,EAAAS,KAAA,WACA,OAAAC,OAAAD,KAAAvE,IAEA8D,EAAAW,QAAAR,EACAS,EAAAC,QAAAb,EACAA,EAAAE,GAAA,6FClFAU,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,+DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,4DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,6ECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0ECAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,iDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,iDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,qDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oFCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,uDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,wDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,2DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,oDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,0DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,+DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,2DCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,kDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,yDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,sDCAxCF,EAAAC,QAAiBT,EAAAU,EAAuB,mYCAnBC,aACjB,SAAAA,IAAgD,IAApCC,EAAoCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxB,uBAAwBP,OAAAU,EAAA,EAAAV,CAAAW,KAAAN,GAC5CM,KAAKL,UAAYA,EACjBK,KAAKC,MAAQ,KACbD,KAAKE,oEAIL,IAAMC,EAAcC,OAAOC,aAAaC,QAAQN,KAAKL,WACrD,GAAMQ,EAAa,CACf,IAAMF,EAAQM,KAAKC,MAAML,GACzB,GAAIF,EAAMA,OAASA,EAAMQ,eAAgB,CACrC,IAAMC,EAAW,IAAIC,KAAKV,EAAMQ,gBAC5B,IAAIE,KAASD,GACPT,EAAMA,QACRD,KAAKC,MAAQA,EAAMA,2CAO7BA,GACND,KAAKC,MAAQA,EACb,IAAMW,EAAU,IAAID,KACpBC,EAAQC,WAAWD,EAAQE,aAAe,IAC1CV,OAAOC,aAAaU,QAAQf,KAAKL,UAAWY,KAAKS,UAAU,CACvDf,MAAOD,KAAKC,MACZQ,eAAgBG,EAAQK,0BCvBfC,qMACG,IAAAC,EAAAnB,KACVC,EAAQ,IAAIP,EAEE,OAAhBO,EAAMA,MAMVmB,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,cAAAH,OAAkDpB,EAAMA,QAC5DwB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACEA,EAAK/B,OAAS,GAAK+B,EAAK,GAAGC,MAAQ5B,EAAMA,OACzC6B,QAAQC,IAAIH,GACZT,EAAKa,MAAMC,QAAQC,KAAK,aAExBf,EAAKa,MAAMC,QAAQC,KAAK,WAX5BlC,KAAKgC,MAAMC,QAAQC,KAAK,0CAiB5B,OACIC,EAAAC,EAAAC,cAAA,mBAxBsBC,IAAMC,sCCDlCC,EAAU,CAAC,WAAY,UAAW,UAAW,WAAY,aAAc,YAExDC,cACjB,SAAAA,EAAYT,GAAO,IAAAb,EAAA,OAAA9B,OAAAU,EAAA,EAAAV,CAAAW,KAAAyC,IACftB,EAAA9B,OAAAqD,EAAA,EAAArD,CAAAW,KAAAX,OAAAsD,EAAA,EAAAtD,CAAAoD,GAAAG,KAAA5C,KAAMgC,KACDa,MAAQ,CACTC,OAAQN,EAAQO,KAAKC,MAAMD,KAAKE,SAAWT,EAAQ3C,UAGvDsB,EAAK+B,MAAQ/B,EAAK+B,MAAMC,KAAX9D,OAAA+D,EAAA,EAAA/D,CAAA8B,IANEA,mFAYK,QAFN,IAAIzB,GAERO,OAEND,KAAKgC,MAAMqB,6CAKX,IAAAC,EAAAtD,KACJ,OAAOoB,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,aAAkD,CAC1D+B,OAAQ,OACRC,KAAMjD,KAAKS,UAAUhB,KAAK6C,OAC1BY,QAAS,CACLC,eAAgB,sBAGvBjC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFE,QAAQC,IAAIH,IACE,IAAIlC,GACZiE,UAAU/B,EAAKC,KACrByB,EAAKtB,MAAMqB,eACZO,MAAM,SAAAC,GACLP,EAAKtB,MAAMqB,WAAWQ,sCAIrB,IAAAC,EAAA9D,KACC+D,EAAQC,MAAQ,KAAA3C,OAA8BrB,KAAK6C,MAAMC,OAA1C,SACrB,OACIX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,IAAKH,EAAOI,eAAa,IAChChC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAMR,EAAKZ,UAAtD,iBA5C0BZ,IAAMC,WCF3BgC,8LAIO,QAFN,IAAI7E,GAERO,OAEND,KAAKgC,MAAMC,QAAQC,KAAK,wCAKrB2B,GACHA,IAEA/B,QAAQC,IAAI8B,IACE,IAAInE,GACZiE,UAAU,OAEpB3D,KAAKgC,MAAMC,QAAQC,KAAK,sCAIxB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmC,EAAD,CACInB,WAAYrD,KAAKqD,WAAWF,KAAKnD,gBAzBlBsC,IAAMC,oBCApBkC,mLACR,IAAAtD,EAAAnB,KACC+D,EAAQC,MAAQ,KAAA3C,OAA2BrB,KAAKgC,MAAM0C,QAAQC,KAA/C,SACrB,OACIxC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,KACIzC,EAAAC,EAAAC,cAACuC,EAAA,EAAKC,KAAN,KACI1C,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,IAAKH,EAAOI,eAAa,IAAInE,KAAKgC,MAAM0C,QAAQA,QACtD1E,KAAKgC,MAAM8C,OACR3C,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAQC,QAAQ,kBAAkBC,QAAS,kBAAMnD,EAAKa,MAAM+C,eAAe5D,EAAKa,MAAM0C,QAAQ7C,OAA9F,eATaS,IAAMC,6CCFzCyC,UAFkB,QAAA3D,OAAWjB,OAAOkB,SAAS2D,SAA3B,eAEV,UAAA5D,OAAajB,OAAOkB,SAAS2D,SAA7B,UAMRC,EAAW,kBAAM7E,aAAaC,QAAQ,UA8B/B6E,EAAc,SAACC,EAAYnF,GAEtC,OADA6B,QAAQC,IAAI,qBAAsBqD,GAC3BhE,MAAK,GAAAC,OAAI2D,EAAJ,aAAyB,CACnCzB,OAAQ,OACRE,QAAS,CACPC,eAAgB,mBAChB2B,OAAU,mBACVC,cAAiBJ,KAEnB1B,KAAMjD,KAAKS,UAAUoE,MC7BVG,EAhBK,SAAAC,GAGlB,IAAIC,EAAS,GAUb,OARKD,GACHC,EAAOvD,KAAK,0BAOPuD,oBC4FMC,qNAnGb7C,MAAQ,CACN8C,KAAM,GACNC,gBAAiBzE,EAAKa,MAAM4D,gBAC5BC,QAAS1E,EAAKa,MAAM6D,QACpBC,YAAY,EACZL,OAAQ,MAGVK,WAAa,SAAA7G,GACXkC,EAAK4E,SACH,CACED,YAAY,GAEd,kBAAME,SAASC,iBAAiB,QAAS9E,EAAK+E,gBAIlDA,UAAY,SAAAjH,GACV6C,QAAQC,IAAIZ,EAAKgF,aACQ,OAArBhF,EAAKgF,aAAyBhF,EAAKgF,YAAYC,SAASnH,EAAEoH,SAC5DlF,EAAK4E,SACH,CACED,YAAY,GAEd,kBAAME,SAASM,oBAAoB,QAASnF,EAAK+E,gBAKvDK,0BAA4B,SAAAC,GAC1BrF,EAAK4E,SAAS,CACZH,gBAAiBY,EAAUZ,gBAC3BC,QAASW,EAAUX,aAIvBY,aAAe,SAAAxH,GACb,IAAIyH,EAAaC,EAAS1H,EAAEoH,OAAOO,OAEnCzF,EAAK4E,SAAS,CACZJ,KAAM1G,EAAEoH,OAAOO,MACfnB,OAAQiB,OAIZG,aAAe,SAAA5H,GACbA,EAAE6H,iBACF,IAAIJ,EAAaC,EAASxF,EAAK0B,MAAM8C,MAEX,IAAtBe,EAAW7G,SACbsF,EAAYhE,EAAK0B,OACjB1B,EAAK4E,SAAS,CAAEJ,KAAM,MAExBxE,EAAK4E,SAAS,CACZN,OAAQiB,OAIZK,SAAW,SAAA9H,GAET,IAAI+H,EAAQ/H,EAAEgI,OACd9F,EAAK4E,SAAS,CACZJ,KAAMxE,EAAK0B,MAAM8C,KAAOqB,6EAInB,IAAA1D,EAAAtD,KACHyF,EAASzF,KAAK6C,MAAM4C,OAAO5K,IAAI,SAAAgJ,GAAG,OAAI1B,EAAAC,EAAAC,cAAA,SAAIwB,KAE9C,OACE1B,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,mBACb/E,EAAAC,EAAAC,cAAA,QAAM8E,SAAUnH,KAAK6G,cACnB1E,EAAAC,EAAAC,cAAA,SACE+E,MAAOC,EAAO7B,MACd8B,KAAK,OACLV,MAAO5G,KAAK6C,MAAM8C,KAClB4B,SAAUvH,KAAKyG,aACfe,YAAY,wBAGhBrF,EAAAC,EAAAC,cAAA,OAAK+E,MAAO,CAAEK,MAAO,QAAUhC,GAC9BzF,KAAK6C,MAAMiD,WACV3D,EAAAC,EAAAC,cAAA,QAAM+E,MAAOC,EAAOlB,YAAauB,IAAK,SAAAC,GAAE,OAAKrE,EAAK6C,YAAcwB,IAC9DxF,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACEC,SAAU7H,KAAK+G,SACfe,cAAc,EACdC,MAAM,YAIV5F,EAAAC,EAAAC,cAAA,KAAG+E,MAAOC,EAAOW,eAAgB1D,QAAStE,KAAK8F,YAC5CmC,OAAOC,cAAc,iBA5Fd5F,IAAMC,YAsGpB8E,EAAS,CACbc,UAAW,CACTC,QAAS,GACTC,UAAW,oBACXC,aAAc,IAEhBC,KAAM,CACJC,QAAS,QAEXhD,MAAO,CACLiC,MAAO,UACPgB,WAAY,OACZC,QAAS,OACTC,OAAQ,OACRC,KAAM,EACNC,SAAU,IAEZb,eAAgB,CACdc,SAAU,QACVH,OAAQ,OACRI,OAAQ,EACRC,OAAQ,WAEV7C,YAAa,CACX8C,SAAU,WACVC,OAAQ,GACRC,MAAO,EACPL,SAAU,QACVM,WAAY,UC/HKC,cAEjB,SAAAA,EAAYrH,GAAO,IAAAb,EAAA,OAAA9B,OAAAU,EAAA,EAAAV,CAAAW,KAAAqJ,IACflI,EAAA9B,OAAAqD,EAAA,EAAArD,CAAAW,KAAAX,OAAAsD,EAAA,EAAAtD,CAAAgK,GAAAzG,KAAA5C,KAAMgC,KACDa,MAAQ,CACTyG,SAAU,GACVC,KAAM,CACF1H,IAAK,UACLiB,OAAQ,QAEZ0G,SAAS,GARErI,mFAYC,IAAAmC,EAAAtD,KACVC,EAAQ,IAAIP,EAEE,OAAhBO,EAAMA,MAKVD,KAAKkD,MAAMjD,EAAMA,OAAOwB,KAAK,kBAAM6B,EAAKmG,gBAHpCzJ,KAAKgC,MAAMC,QAAQC,KAAK,mCAO1BjC,GAAO,IAAA6D,EAAA9D,KACT,OAAOoB,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,cAAAH,OAAkDpB,IAC7DwB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACEA,EAAK/B,OAAS,GAAK+B,EAAK,GAAGC,MAAQ5B,GACnC6B,QAAQC,IAAIH,GACZkC,EAAKiC,SAAS,CACVwD,KAAM3H,EAAK,KAEf8H,YAAY,WAAY1J,KAAKyJ,eAAiBtG,KAAKW,GAAO,QAE5C,IAAIpE,GACZiE,UAAU,MAChBG,EAAK9B,MAAMC,QAAQC,KAAK,QAE7B0B,MAAM,SAAAC,IACS,IAAInE,GACZiE,UAAU,MAChBG,EAAK9B,MAAMC,QAAQC,KAAK,6CAIlB,IAAAyH,EAAA3J,KACV,OAAOoB,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,kBACXC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFA,EAAOA,EAAKgI,UACZ9H,QAAQC,IAAIH,GACZ+H,EAAK5D,SAAS,CACVwD,KAAMI,EAAK9G,MAAM0G,KACjBD,SAAU1H,EACV4H,SAAS,6CAKNvK,GAAG,IAAA4K,EAAA7J,KACd,GAAmB,KAAff,EAAE6K,SAAN,CAGA,IAAMpF,EAAUzF,EAAEoH,OAAOO,MAGzB,OAFA3H,EAAEoH,OAAOO,MAAQ,GACjB9E,QAAQC,IAAI2C,GACLtD,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,gBAAqD,CAC7D+B,OAAQ,OACRC,KAAMjD,KAAKS,UAAU,CACjB0D,QAASA,EACT6E,KAAMvJ,KAAK6C,MAAM0G,KAAK1H,IACtB8C,KAAM3E,KAAK6C,MAAM0G,KAAKzG,SAE1BW,QAAS,CACLC,eAAgB,sBAGvBjC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFiI,EAAKJ,gBACN7F,MAAM,SAAAC,GACL/B,QAAQC,IAAI8B,4CAINhF,GAAI,IAAAkL,EAAA/J,KACd,OAAOoB,MAAK,GAAAC,OAAIjB,OAAOkB,SAASC,OAAOC,WAA3B,iBAAAH,OAAqDxC,EAArD,KAAAwC,OAA2DrB,KAAK6C,MAAM0G,KAAK1H,KAAO,CAC1F0B,OAAQ,WAEX9B,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFmI,EAAKN,gBACN7F,MAAM,SAAAC,GACL/B,QAAQC,IAAI8B,sCAIX,IAAAmG,EAAAhK,KACL,GAAIA,KAAK6C,MAAM2G,QACX,OACIrH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,YAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,cAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,YAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,WAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,YAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,SAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,UAClClC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAASC,UAAU,OAAO7F,QAAQ,UAQ1C,IAAMN,EAAQC,MAAQ,KAAA3C,OAA2BrB,KAAK6C,MAAM0G,KAAKzG,OAA5C,SACrB,OAEIX,EAAAC,EAAAC,cAAC8H,EAAA,IAAD,KACIhI,EAAAC,EAAAC,cAAC8H,EAAA,IAAD,CAAKC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACtBnI,EAAAC,EAAAC,cAAC8H,EAAA,KAAD,CAAMI,OAAQpI,EAAAC,EAAAC,cAAC8H,EAAA,UAAD,MAAeK,QAAS,CAACrI,EAAAC,EAAAC,cAAA,YAC/BF,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAOC,IAAKH,EAAOI,eAAa,IAGhChC,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAYC,WAAY1K,KAAK2K,eAAexH,KAAKnD,MAAOkH,UAAU,QAE9D/E,EAAAC,EAAAC,cAACoI,EAAA,EAAWG,KAAZ,6BAIAzI,EAAAC,EAAAC,cAACwI,EAAD,SAOZ1I,EAAAC,EAAAC,cAAC8H,EAAA,IAAD,CAAKC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACrBtK,KAAK6C,MAAMyG,SAASzO,IAAI,SAAA6J,GAAO,OAC5BvC,EAAAC,EAAAC,cAACyI,EAAD,CAAapG,QAASA,EAASK,eAAgBiF,EAAKe,cAAc5H,KAAK6G,GAAOlF,MAAOkF,EAAKnH,MAAM0G,KAAK1H,MAAQ6C,EAAQ6E,kBA/IpGjH,IAAMC,WCQ5ByI,EAZF,kBACX7I,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACA9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,KACE/I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnK,IACjCiB,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW9G,IAChCpC,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,eCO1BC,MAXf,WACE,OACFpJ,EAAAC,EAAAC,cAAC8H,EAAA,OAAD,CAAQqB,MAAOrJ,EAAAC,EAAAC,cAAA,UAAOoJ,WAAW,QAAQvE,UAAU,eACjD/E,EAAAC,EAAAC,cAAA,OAAK6B,IAAI,+EAA+EgD,UAAU,aAAawE,OAAO,QAAQC,MAAM,UACtIxJ,EAAAC,EAAAC,cAAC8H,EAAA,QAAD,CAASyB,KAAK,kBAAkBC,MAAM,cAAtC,oBCYeC,MAff,WACC,OAEC3J,EAAAC,EAAAC,cAAC8H,EAAA,QAAD,KAEAhI,EAAAC,EAAAC,cAAC8H,EAAA,QAAD,CAASjD,UAAU,YACjB/E,EAAAC,EAAAC,cAAA,MAAI6E,UAAU,SAAd,uCCKW6E,iBAZI,SAAA/J,GAAS,IAChBgK,EAAqBhK,EAArBgK,OAAQC,EAAajK,EAAbiK,SAChB,OACI9J,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,cACX/E,EAAAC,EAAAC,cAAA,cAAY6E,UAAU,yBACjB+E,GAEL9J,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,sBAAhB,UAA8C8E,8BCC3CE,EARa,SAACb,EAAW5D,EAAOpD,GAC3C,IAAM8H,EAA6B,YAAV1E,EAAsB,OAASA,EAClD2E,EAAc,GAAA/K,OAAMgK,EAAN,MAAAhK,OAAoB8K,GAExC,OAAI9H,GAAuB,YAAZA,EAAuB,GAAAhD,OAAU+K,EAAV,MAAA/K,OAA6BgD,GAC5D+H,GCHLC,UAAS,SAAArK,GAAS,IACZsK,EAAqDtK,EAArDsK,cAAeL,EAAsCjK,EAAtCiK,SAAUxE,EAA4BzF,EAA5ByF,MAAOpD,EAAqBrC,EAArBqC,QAAYkI,EADhClN,OAAAmN,EAAA,EAAAnN,CACyC2C,EADzC,gDAEdyK,EAAyBP,EAAoB,SAAUzE,EAAOpD,GAEpE,OACIlC,EAAAC,EAAAC,cAAA,SAAAhD,OAAAqN,OAAA,CAAQxF,UAAWyF,IAAW,SAAUF,EAAwBH,IAAoBC,GAChFpK,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,iBAAiB+E,MAK9BI,IAafA,EAAOO,aAAe,CAClBN,cAAe,GACf7E,MAAO,UACPpD,QAAS,WC7Bb,IAIewI,EAJc,WACzB,OAAO9J,KAAKE,SAASzB,SAAS,IAAIsL,UAAU,EAAG,IAAM/J,KAAKE,SAASzB,SAAS,IAAIsL,UAAU,EAAG,KCE3FC,UAAM,SAAA/K,GAAS,IACTyF,EAA2DzF,EAA3DyF,MAAOuF,EAAoDhL,EAApDgL,UAAWC,EAAyCjL,EAAzCiL,UAAWC,EAA8BlL,EAA9BkL,WAAYvH,EAAkB3D,EAAlB2D,KAAMtB,EAAYrC,EAAZqC,QACjD8I,EAAU,GAAA9L,OAAM2L,EAAN,KAAA3L,OAAmBwL,KAC7BO,EAAsBlB,EAAoB,MAAOzE,EAAOpD,GAE9D,OACIlC,EAAAC,EAAAC,cAAA,OAAK6E,UAAWyF,IAAW,MAAOS,EAAqBF,IAClDD,EACD9K,EAAAC,EAAAC,cAAA,SAAO6E,UAAU,gBAAgBI,KAAK,WAAW+F,KAAML,EAAWnO,GAAIsO,EAAYG,SAAO,IAEzFnL,EAAAC,EAAAC,cAAA,SAAO6E,UAAU,gBAAgBI,KAAK,WAAW+F,KAAML,EAAWnO,GAAIsO,IACtEhL,EAAAC,EAAAC,cAAA,SAAO6E,UAAU,cAAcqG,QAASJ,GACpChL,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,aACXvB,OAONoH,IAoBfA,EAAIH,aAAe,CACfnF,MAAO,UACPwF,WAAW,EACXC,WAAY,GACZ7I,QAAS,sBC5CPmJ,EAAO,SAAAxL,GAAS,IAEdyL,EAMYzL,EANZyL,kBACAC,EAKY1L,EALZ0L,iBACAC,EAIY3L,EAJZ2L,oBACAC,EAGY5L,EAHZ4L,SACAC,EAEY7L,EAFZ6L,KACAC,EACY9L,EADZ8L,WACGvB,EARWlN,OAAAmN,EAAA,EAAAnN,CAQF2C,EARE,+FAUlB,OACIG,EAAAC,EAAAC,cAAA,OAAUkK,EACNpK,EAAAC,EAAAC,cAAC0L,EAAD,CACItG,MAAOgG,EACPnG,KAAK,SACLjD,QAASsJ,GAERD,GAEJG,EAAKhO,OAAS,EACfsC,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,gCACV2G,EAAKhT,IAAI,SAACmT,GACP,IAAMC,EAAeD,EAAIE,QAAQ,MAAO,IACxC,OACI/L,EAAAC,EAAAC,cAAC8L,EAAD,CACI1G,MAAOmG,EACPZ,UAAWiB,EACXG,IAAG,OAAA/M,OAASwL,KACZK,WAAW,sCACXvH,KAAMqI,EACN3J,QAASyJ,OAIhB,KAMNN,IA6BfA,EAAKZ,aAAe,CAChBa,kBAAmB,UACnBC,iBAAkB,SAClBC,oBAAqB,UACrBC,SAAU,UACVC,KAAM,GACNC,WAAY,uBChCDO,uHAzCoBC,GAC3B,GAAIA,EAAazO,OAAS,EAAG,OAAO0O,EAEpC,IAAMC,EAAiB,GAHkBC,GAAA,EAAAC,GAAA,EAAAC,OAAA7O,EAAA,IAKzC,QAAA8O,EAAAC,EAAoBN,EAApBO,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAgC,KAArBS,EAAqBN,EAAAhI,MAAAuI,GAAA,EAAAC,GAAA,EAAAC,OAAAvP,EAAA,IAC5B,QAAAwP,EAAAC,EAAkBL,EAAMrB,KAAxBiB,OAAAC,cAAAI,GAAAG,EAAAC,EAAAP,QAAAC,MAAAE,GAAA,EAA8B,KAAnBnB,EAAmBsB,EAAA1I,MAC1B,GAAI0H,EAAakB,QAAQxB,IAAQ,EAAG,CAChCQ,EAAetM,KAAKgN,GACpB,QAJoB,MAAArL,GAAAuL,GAAA,EAAAC,EAAAxL,EAAA,YAAAsL,GAAA,MAAAI,EAAAE,QAAAF,EAAAE,SAAA,WAAAL,EAAA,MAAAC,KALS,MAAAxL,GAAA6K,GAAA,EAAAC,EAAA9K,EAAA,YAAA4K,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAczC,OAAOH,8CAOgBkB,GACvB,OAAO3M,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM0M,4CAO7C,IAAMC,EAAa,GADAC,GAAA,EAAAC,GAAA,EAAAC,OAAAhQ,EAAA,IAGnB,QAAAiQ,EAAAC,EAAoBzB,EAApBO,OAAAC,cAAAa,GAAAG,EAAAC,EAAAhB,QAAAC,MAAAW,GAAA,EAAgC,KAArBV,EAAqBa,EAAAnJ,MAAAqJ,GAAA,EAAAC,GAAA,EAAAC,OAAArQ,EAAA,IAC5B,QAAAsQ,EAAAC,EAAkBnB,EAAMrB,KAAxBiB,OAAAC,cAAAkB,GAAAG,EAAAC,EAAArB,QAAAC,MAAAgB,GAAA,EAA8B,KAAnBjC,EAAmBoC,EAAAxJ,OACO,IAA7B+I,EAAWH,QAAQxB,IAAa2B,EAAWzN,KAAK8L,IAF5B,MAAAnK,GAAAqM,GAAA,EAAAC,EAAAtM,EAAA,YAAAoM,GAAA,MAAAI,EAAAZ,QAAAY,EAAAZ,SAAA,WAAAS,EAAA,MAAAC,KAHb,MAAAtM,GAAAgM,GAAA,EAAAC,EAAAjM,EAAA,YAAA+L,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GASnB,OAAOH,WCkDAW,sBA5Fb,SAAAA,IAAc,IAAAnP,EAAA,OAAA9B,OAAAU,EAAA,EAAAV,CAAAW,KAAAsQ,IACZnP,EAAA9B,OAAAqD,EAAA,EAAArD,CAAAW,KAAAX,OAAAsD,EAAA,EAAAtD,CAAAiR,GAAA1N,KAAA5C,QAcFuQ,kBAAoB,SAAAC,GAClB,IAAM5O,EAAO,GADiB6M,GAAA,EAAAC,GAAA,EAAAC,OAAA7O,EAAA,IAE9B,QAAA8O,EAAAC,EAAkB2B,EAASpR,OAA3B0P,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAAmC,KAAxBL,EAAwBQ,EAAAhI,MACjChF,EAAKwM,GAAOoC,EAASC,IAAIrC,IAHG,MAAAvK,GAAA6K,GAAA,EAAAC,EAAA9K,EAAA,YAAA4K,GAAA,MAAAI,EAAAY,QAAAZ,EAAAY,SAAA,WAAAf,EAAA,MAAAC,GAK9B,OAAO/M,GApBKT,EAuBduP,YAAc,WACZvP,EAAK4E,SAAS,CACZ4K,aAAc,QAzBJxP,EA6Bd0F,aAAe,SAAA+J,GACbA,EAAM9J,iBACN,IAAMlF,EAAOT,EAAKoP,kBAAkB,IAAIM,SAASD,EAAMvK,SACjDiI,EAAejP,OAAOD,KAAKwC,GAC3B4M,EAAiBH,EAAayC,wBAAwBxC,GAExDyC,EAAwC,IAA1BvC,EAAe3O,OAAe2O,EAAe,GAAKA,EAAeH,EAAa2C,oBAAoBxC,EAAe3O,SAEnIsB,EAAK4E,SAAS,CACZ4K,aAAc,CACZ3E,OAAQ+E,EAAY/E,OAAOqB,KAC3BQ,KAAMkD,EAAYlD,KAClBlI,KAAMoL,EAAYpL,SAvCtBxE,EAAK0B,MAAQ,CACX8N,aAAc,KACd9C,KAAM,IAJI1M,mFASZnB,KAAK+F,SAAS,CAAE8H,KAAMQ,EAAa4C,gBAAgBC,0CAqC5C,IAAAC,EACwBnR,KAAK6C,MAA5B8N,EADDQ,EACCR,aAAc9C,EADfsD,EACetD,KAEtB,OACE1L,EAAAC,EAAAC,cAACF,EAAAC,EAAMgP,SAAP,KACIT,EASG,GARLxO,EAAAC,EAAAC,cAACgP,EAAD,CACEnK,UAAU,YACVC,SAAUnH,KAAK6G,aACf4G,kBAAkB,UAClBC,iBAAiB,iBACjBC,oBAAoB,YACpBE,KAAMA,EACNC,WAAW,YAEZ6C,EACDxO,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,aACb/E,EAAAC,EAAAC,cAAC0L,EAAD,CACEzB,cAAc,oBACd7E,MAAM,UACNnD,QAAStE,KAAK0Q,YACdpJ,KAAK,SAELnF,EAAAC,EAAAC,cAAA,QAAM6E,UAAU,6BAAhB,QANF,oBAWA/E,EAAAC,EAAAC,cAACiP,EAAD,CAAYtF,OAAQ2E,EAAa3E,QAC5B2E,EAAahL,MAEjBgL,EAAa9C,MAAQ8C,EAAa9C,KAAKhO,OAAS,EACjDsC,EAAAC,EAAAC,cAACF,EAAAC,EAAMgP,SAAP,KACEjP,EAAAC,EAAAC,cAAA,SAAO6E,UAAU,4CAAjB,uBACGyJ,EAAa9C,KAAKhT,IAAI,SAACmT,EAAKuD,GAE3B,WAAAlQ,OAAY2M,GAAZ3M,OAAmBkQ,EAAQ,IAAOZ,EAAa9C,KAAKhO,OAAS,MAAQ,SAGvD,IACb,WAvFG0C,cCiELiP,+LA9DX,IAAMC,EAAU,CACdC,YAAa,WACX5P,QAAQC,IAAI,eAEd4P,UAAW,WACT7P,QAAQC,IAAI,aAEd6P,aAAc,WACZ9P,QAAQC,IAAI,gBAEd8P,WAAY,WACV/P,QAAQC,IAAI,cAEd+P,WAAY,IACZC,YAAa,IACbC,QAAS,GACTC,aAAa,EACbC,YAAa,KACbC,UAAW,OAEbC,IAAEZ,MAAMa,KAAKrS,KAAKwR,MAAOC,oCAQlB,IAAAtQ,EAAAnB,KACP,OACEmC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgP,SAAA,KACEjP,EAAAC,EAAAC,cAAA,KACE6E,UAAU,iEACVoL,cAAY,UAFd,qBAOAnQ,EAAAC,EAAAC,cAAA,OACEqF,IAAK,SAAA8J,GACHrQ,EAAKqQ,MAAQA,GAEf3S,GAAG,SACHqI,UAAU,SAIV/E,EAAAC,EAAAC,cAAA,OAAK6E,UAAU,iBACb/E,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAACkQ,EAAD,OAEFpQ,EAAAC,EAAAC,cAAA,OAAKwJ,MAAM,gBACT1J,EAAAC,EAAAC,cAAA,KAAGuJ,KAAK,IAAIC,MAAM,+CAAlB,mBAtDQtJ,aCWLiQ,GAZH,kBACVrQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoQ,EAAD,MAEAtQ,EAAAC,EAAAC,cAACqQ,EAAD,MAEAvQ,EAAAC,EAAAC,cAACsQ,GAAD,MAEAxQ,EAAAC,EAAAC,cAACuQ,EAAD,QCVJC,iBACE1Q,EAAAC,EAAAC,cAAC4I,EAAA,EAAD,KACE9I,EAAAC,EAAAC,cAACyQ,GAAD,OAED9M,SAAS+M,eAAe","file":"static/js/main.67ce6818.chunk.js","sourcesContent":["var map = {\n\t\"./avocado.png\": 53,\n\t\"./blushing.png\": 54,\n\t\"./bowling.png\": 55,\n\t\"./butterfly.png\": 56,\n\t\"./caterpillar.png\": 57,\n\t\"./clapping.png\": 58,\n\t\"./cookie.png\": 59,\n\t\"./eyebrow-raised.png\": 60,\n\t\"./fire.png\": 61,\n\t\"./firework-sparkler.png\": 62,\n\t\"./flag.png\": 63,\n\t\"./floppy-disk.png\": 64,\n\t\"./ghost.png\": 65,\n\t\"./graduation-cap.png\": 66,\n\t\"./grinning-face-with-smiling-eyes.png\": 67,\n\t\"./grinning-face-with-star-eyes.png\": 68,\n\t\"./grinning.png\": 69,\n\t\"./guitar.png\": 70,\n\t\"./hourglass.png\": 71,\n\t\"./key.png\": 72,\n\t\"./light-bulb.png\": 73,\n\t\"./man-mage.png\": 74,\n\t\"./maple-leaf.png\": 75,\n\t\"./mobile-phone.png\": 76,\n\t\"./monocle.png\": 77,\n\t\"./music.png\": 78,\n\t\"./nerd.png\": 79,\n\t\"./neutral.png\": 80,\n\t\"./newspaper.png\": 81,\n\t\"./notebook.png\": 82,\n\t\"./pineapple.png\": 83,\n\t\"./pirateflag.png\": 84,\n\t\"./poo.png\": 85,\n\t\"./pretzel.png\": 86,\n\t\"./prideflag.png\": 87,\n\t\"./pushpin.png\": 88,\n\t\"./relieved.png\": 89,\n\t\"./rocket.png\": 90,\n\t\"./rolling.png\": 91,\n\t\"./ship.png\": 92,\n\t\"./shocked-face-with-exploding-head_1f92f.png\": 93,\n\t\"./skateboard.png\": 94,\n\t\"./slightly.png\": 95,\n\t\"./snowflake.png\": 96,\n\t\"./speaking.png\": 97,\n\t\"./star.png\": 98,\n\t\"./stopwatch.png\": 99,\n\t\"./sunglasses.png\": 100,\n\t\"./tears-of-joy.png\": 101,\n\t\"./thinking.png\": 102,\n\t\"./tropical-fish.png\": 103,\n\t\"./turtle.png\": 104,\n\t\"./umbrella.png\": 105,\n\t\"./unicorn-face.png\": 106,\n\t\"./upside-down.png\": 107,\n\t\"./victory-hand_270c.png\": 108,\n\t\"./videocassette.png\": 109,\n\t\"./wave.png\": 110,\n\t\"./waving-hand.png\": 111,\n\t\"./zanyface.png\": 112,\n\t\"./zipper-mouth.png\": 113\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/avocado.80e70d0e.png\";","module.exports = __webpack_public_path__ + \"static/media/blushing.f4b5e164.png\";","module.exports = __webpack_public_path__ + \"static/media/bowling.02cadaf6.png\";","module.exports = __webpack_public_path__ + \"static/media/butterfly.64298cc4.png\";","module.exports = __webpack_public_path__ + \"static/media/caterpillar.1d574498.png\";","module.exports = __webpack_public_path__ + \"static/media/clapping.2b4d2b4d.png\";","module.exports = __webpack_public_path__ + \"static/media/cookie.798677f1.png\";","module.exports = __webpack_public_path__ + \"static/media/eyebrow-raised.d1800c02.png\";","module.exports = __webpack_public_path__ + \"static/media/fire.7792a29f.png\";","module.exports = __webpack_public_path__ + \"static/media/firework-sparkler.6c6b5155.png\";","module.exports = __webpack_public_path__ + \"static/media/flag.9d72f89f.png\";","module.exports = __webpack_public_path__ + \"static/media/floppy-disk.1f9882d5.png\";","module.exports = __webpack_public_path__ + \"static/media/ghost.e9f354d9.png\";","module.exports = __webpack_public_path__ + \"static/media/graduation-cap.5ad36c9c.png\";","module.exports = __webpack_public_path__ + \"static/media/grinning-face-with-smiling-eyes.d4a13972.png\";","module.exports = __webpack_public_path__ + \"static/media/grinning-face-with-star-eyes.c30615e9.png\";","module.exports = __webpack_public_path__ + \"static/media/grinning.a5c4c868.png\";","module.exports = __webpack_public_path__ + \"static/media/guitar.313bb1e7.png\";","module.exports = __webpack_public_path__ + \"static/media/hourglass.5eaa89d0.png\";","module.exports = __webpack_public_path__ + \"static/media/key.363290b3.png\";","module.exports = __webpack_public_path__ + \"static/media/light-bulb.4bf9a1de.png\";","module.exports = __webpack_public_path__ + \"static/media/man-mage.fc1f2036.png\";","module.exports = __webpack_public_path__ + \"static/media/maple-leaf.8829a711.png\";","module.exports = __webpack_public_path__ + \"static/media/mobile-phone.1286f7b1.png\";","module.exports = __webpack_public_path__ + \"static/media/monocle.8fe0074c.png\";","module.exports = __webpack_public_path__ + \"static/media/music.05c45c21.png\";","module.exports = __webpack_public_path__ + \"static/media/nerd.2d99fdf1.png\";","module.exports = __webpack_public_path__ + \"static/media/neutral.a7fe3123.png\";","module.exports = __webpack_public_path__ + \"static/media/newspaper.d9250c04.png\";","module.exports = __webpack_public_path__ + \"static/media/notebook.2e123782.png\";","module.exports = __webpack_public_path__ + \"static/media/pineapple.d5e5367c.png\";","module.exports = __webpack_public_path__ + \"static/media/pirateflag.636b309d.png\";","module.exports = __webpack_public_path__ + \"static/media/poo.62b30945.png\";","module.exports = __webpack_public_path__ + \"static/media/pretzel.6cb932fe.png\";","module.exports = __webpack_public_path__ + \"static/media/prideflag.57d00139.png\";","module.exports = __webpack_public_path__ + \"static/media/pushpin.cbe16d68.png\";","module.exports = __webpack_public_path__ + \"static/media/relieved.5a7e364c.png\";","module.exports = __webpack_public_path__ + \"static/media/rocket.a047faeb.png\";","module.exports = __webpack_public_path__ + \"static/media/rolling.8d0d9682.png\";","module.exports = __webpack_public_path__ + \"static/media/ship.bbeabadc.png\";","module.exports = __webpack_public_path__ + \"static/media/shocked-face-with-exploding-head_1f92f.2df78bb4.png\";","module.exports = __webpack_public_path__ + \"static/media/skateboard.3c3d9443.png\";","module.exports = __webpack_public_path__ + \"static/media/slightly.f8af4936.png\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.4f198e20.png\";","module.exports = __webpack_public_path__ + \"static/media/speaking.841fb03a.png\";","module.exports = __webpack_public_path__ + \"static/media/star.177c7c02.png\";","module.exports = __webpack_public_path__ + \"static/media/stopwatch.8966cdcf.png\";","module.exports = __webpack_public_path__ + \"static/media/sunglasses.4238fe56.png\";","module.exports = __webpack_public_path__ + \"static/media/tears-of-joy.4555aebe.png\";","module.exports = __webpack_public_path__ + \"static/media/thinking.872be34d.png\";","module.exports = __webpack_public_path__ + \"static/media/tropical-fish.14c824b0.png\";","module.exports = __webpack_public_path__ + \"static/media/turtle.82202521.png\";","module.exports = __webpack_public_path__ + \"static/media/umbrella.1efa75fc.png\";","module.exports = __webpack_public_path__ + \"static/media/unicorn-face.969d0603.png\";","module.exports = __webpack_public_path__ + \"static/media/upside-down.3a122f64.png\";","module.exports = __webpack_public_path__ + \"static/media/victory-hand_270c.ef7a1b9b.png\";","module.exports = __webpack_public_path__ + \"static/media/videocassette.6d06c6c8.png\";","module.exports = __webpack_public_path__ + \"static/media/wave.0da910f2.png\";","module.exports = __webpack_public_path__ + \"static/media/waving-hand.1ca528ba.png\";","module.exports = __webpack_public_path__ + \"static/media/zanyface.0dc34e67.png\";","module.exports = __webpack_public_path__ + \"static/media/zipper-mouth.9029419e.png\";","export default class Token {\n    constructor(tokenName = \"shower_though_secret\") {\n        this.tokenName = tokenName;\n        this.token = null;\n        this.loadToken();\n    }\n\n    loadToken() {\n        const tokenString = window.localStorage.getItem(this.tokenName);\n        if (!!tokenString) {\n            const token = JSON.parse(tokenString);\n            if (token.token && token.dateTimeString) {\n                const dateTime = new Date(token.dateTimeString);\n                if (new Date() < dateTime) {\n                    if (!!token.token) {\n                        this.token = token.token;\n                    }\n                }\n            }\n        }\n    }\n\n    saveToken(token) {\n        this.token = token;\n        const newDate = new Date();\n        newDate.setMinutes(newDate.getMinutes() + 60);\n        window.localStorage.setItem(this.tokenName, JSON.stringify({\n            token: this.token,\n            dateTimeString: newDate.toISOString()\n        }));\n    }\n}","import React from 'react';\nimport Token from '../Token';\nimport \"./Home.css\";\n\n// Home checks if your token is valid and forwards to messages page or login if your token is no longer valid.\nexport default class Home extends React.Component {\n    componentDidMount() {\n        const token = new Token();\n\n        if (token.token === null)\n        {\n            this.props.history.push(\"login\");\n            return;\n        }\n\n        fetch(`${window.location.origin.toString()}/api/anon/${token.token}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.length > 0 && data[0]._id === token.token) {\n                console.log(data);\n                this.props.history.push(\"messages\");\n            } else {\n                this.props.history.push(\"login\");\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Token from '../../Token';\nimport { Button, Image } from 'react-bootstrap';\n\nconst avatars = [\"grinning\", \"neutral\", \"rolling\", \"slightly\", \"sunglasses\", \"thinking\"];\n\nexport default class LoginControl extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avatar: avatars[Math.floor(Math.random() * avatars.length)]\n        };\n\n        this.login = this.login.bind(this);\n    }\n\n    componentDidMount() {\n        const token = new Token();\n\n        if (token.token !== null)\n        {\n            this.props.onComplete();\n            return;\n        }\n    }\n\n    login() {\n        return fetch(`${window.location.origin.toString()}/api/anon`, {\n            method: 'POST',\n            body: JSON.stringify(this.state),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log(data);\n            const token = new Token();\n            token.saveToken(data._id);\n            this.props.onComplete();\n        }).catch(err => {\n            this.props.onComplete(err);\n        });\n    }\n\n    render() {\n        const image = require(`../../assets/images/emojis/${this.state.avatar}.png`);\n        return (\n            <div>\n                <Image src={image} roundedCircle />\n                <Button variant=\"outline-primary\" onClick={() => this.login()}>Login</Button>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Token from '../Token';\nimport LoginControl from './LoginControl/LoginControl';\n\nexport default class Login extends React.Component {\n    componentDidMount() {\n        const token = new Token();\n\n        if (token.token !== null)\n        {\n            this.props.history.push(\"/\");\n            return;\n        }\n    }\n\n    onComplete(err) {\n        if (err)\n        {\n            console.log(err);\n            const token = new Token();\n            token.saveToken(null);\n        }\n        this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div>\n                <LoginControl\n                    onComplete={this.onComplete.bind(this)}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Button, Image, Card } from 'react-bootstrap';\n\n\nexport default class MessageView extends React.Component {\n    render() {\n        const image = require(`../assets/images/emojis/${this.props.message.mood}.png`);\n        return (\n            <div>\n                <Card>\n                    <Card.Body>\n                        <Image src={image} roundedCircle />{this.props.message.message}\n                        {this.props.owned &&\n                            <Button variant=\"outline-primary\" onClick={() => this.props.deleteCallback(this.props.message._id)}>X</Button>\n                        }\n                    </Card.Body>\n                </Card>\n            </div>\n        );\n    }\n}","export const API_WS_ROOT = `ws://${window.location.hostname}:3000/cable`;\n\nconst API_ROOT = `http://${window.location.hostname}:3000`;   //can connect on IP address\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  'Accept': 'application/json',\n}\n\nconst getToken = () => localStorage.getItem('token');\n\nexport const getConversations = (id, token) => {\n  return fetch(`${API_ROOT}/${id}/conversations`, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': getToken()\n    }\n  }).then(res => res.json())\n}\n\nexport const getAllConversations = () => {\n  return fetch(`${API_ROOT}/conversations`)\n    .then(res => res.json())\n}\n\nexport const subscribeUser = (conversation_id, user_id, token) => {\n  return fetch(`${API_ROOT}/subscriptions`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': getToken()\n    },\n    body: JSON.stringify({user_id: user_id, conversation_id: conversation_id})\n  }).then(resp => resp.json())\n}\n\nexport const postMessage = (messageObj, token) => {\n  console.log('API POST message: ', messageObj)\n  return fetch(`${API_ROOT}/messages`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': getToken()\n    },\n    body: JSON.stringify(messageObj)\n  })\n}\n\nexport const loginUser = (userLoginObj) => {\n  return fetch(`${API_ROOT}/login`, {\n    method: 'POST',\n    headers: HEADERS,\n    body: JSON.stringify(userLoginObj)\n  })\n  .then(res => res.json())\n}\n\nexport const createUser = (userSignupObj) => {\n  return fetch(`${API_ROOT}/users`, {\n    method: 'POST',\n    headers: HEADERS,\n    body: JSON.stringify(userSignupObj)\n  })\n  .then(res => res.json())\n}\n\nexport const getCurrentUser = (token) => {\n  return fetch(`${API_ROOT}/current_user`, {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': getToken()\n    },\n  }).then(res => res.json())\n}\n\nexport const createConversation = (id, conversationObj, token) => {\n  return fetch(`${API_ROOT}/${id}/conversations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': getToken()\n    },\n    body: JSON.stringify(conversationObj)\n  })\n}","import React from \"react\";\n\nconst validations = input => {\n  //console.log(input)\n\n  let errors = [];\n\n  if (!input) {\n    errors.push(\"*Input cannot be empty\");\n  }\n\n  // if (input && input.length < 2) {\n  //   errors.push(\"*a bit more effort?\");\n  // }\n\n  return errors;\n};\n\nexport default validations;","import React from \"react\";\nimport { postMessage } from \"../adapter/api\";\nimport validate from \"./validations\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport { Picker } from \"emoji-mart\";\nimport \"./emoji.css\";\n\nclass Emoji extends React.Component {\n  state = {\n    text: \"\",\n    conversation_id: this.props.conversation_id,\n    user_id: this.props.user_id,\n    showEmojis: false,\n    errors: []\n  };\n\n  showEmojis = e => {\n    this.setState(\n      {\n        showEmojis: true\n      },\n      () => document.addEventListener(\"click\", this.closeMenu)\n    );\n  };\n\n  closeMenu = e => {\n    console.log(this.emojiPicker);\n    if (this.emojiPicker !== null && !this.emojiPicker.contains(e.target)) {\n      this.setState(\n        {\n          showEmojis: false\n        },\n        () => document.removeEventListener(\"click\", this.closeMenu)\n      );\n    }\n  };\n\n  componentWillReceiveProps = nextProps => {\n    this.setState({\n      conversation_id: nextProps.conversation_id,\n      user_id: nextProps.user_id\n    });\n  };\n\n  handleChange = e => {\n    let validation = validate(e.target.value);\n    //console.log(validation)\n    this.setState({\n      text: e.target.value,\n      errors: validation\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let validation = validate(this.state.text);\n    //console.log(validation)\n    if (validation.length === 0) {\n      postMessage(this.state);\n      this.setState({ text: \"\" });\n    }\n    this.setState({\n      errors: validation\n    });\n  };\n\n  addEmoji = e => {\n    // console.log(e.native);\n    let emoji = e.native;\n    this.setState({\n      text: this.state.text + emoji\n    });\n  };\n\n  render() {\n    let errors = this.state.errors.map(err => <p>{err}</p>);\n\n    return (\n      <div className=\"newMessageInput\">\n        <form onSubmit={this.handleSubmit}>\n          <input\n            style={styles.input}\n            type=\"text\"\n            value={this.state.text}\n            onChange={this.handleChange}\n            placeholder=\"Type and hit ENTER\"\n          />\n        </form>\n        <div style={{ color: \"red\" }}>{errors}</div>\n        {this.state.showEmojis ? (\n          <span style={styles.emojiPicker} ref={el => (this.emojiPicker = el)}>\n            <Picker\n              onSelect={this.addEmoji}\n              emojiTooltip={true}\n              title=\"weChat\"\n            />\n          </span>\n        ) : (\n          <p style={styles.getEmojiButton} onClick={this.showEmojis}>\n            {String.fromCodePoint(0x1f60a)}\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Emoji;\n\nconst styles = {\n  container: {\n    padding: 20,\n    borderTop: \"1px #4C758F solid\",\n    marginBottom: 20\n  },\n  form: {\n    display: \"flex\"\n  },\n  input: {\n    color: \"inherit\",\n    background: \"none\",\n    outline: \"none\",\n    border: \"none\",\n    flex: 1,\n    fontSize: 16\n  },\n  getEmojiButton: {\n    cssFloat: \"right\",\n    border: \"none\",\n    margin: 0,\n    cursor: \"pointer\"\n  },\n  emojiPicker: {\n    position: \"absolute\",\n    bottom: 10,\n    right: 0,\n    cssFloat: \"right\",\n    marginLeft: \"200px\"\n  }\n};\n\nconst customEmojis = [\n  {\n    name: \"Octocat\",\n    short_names: [\"octocat\"],\n    text: \"\",\n    emoticons: [],\n    keywords: [\"github\"],\n    imageUrl: \"https://assets-cdn.github.com/images/icons/emoji/octocat.png?v7\"\n  }\n];","import React from 'react';\nimport Token from '../Token';\nimport MessageView from './MessageView';\nimport { Image, InputGroup, FormControl, Spinner } from 'react-bootstrap';\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { Card, Row, Col, CardTitle, Parallax, Section} from \"react-materialize\";\nimport \"./Messages.css\";\nimport Emoji from './emoji'\n\n\nexport default class Message extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            messages: [],\n            anon: {\n                _id: \"???????\",\n                avatar: \"haha\"\n            },\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        const token = new Token();\n\n        if (token.token === null)\n        {\n            this.props.history.push(\"/\");\n            return;\n        }\n        this.login(token.token).then(() => this.getMessages());\n        //set interval\n    }\n\n    login(token) {\n        return fetch(`${window.location.origin.toString()}/api/anon/${token}`)\n        .then(response => response.json())\n        .then(data => {\n            if (data.length > 0 && data[0]._id === token) {\n                console.log(data);\n                this.setState({\n                    anon: data[0]\n                });\n                setInterval(function(){ this.getMessages(); }.bind(this), 3000);\n            } else {\n                const token = new Token();\n                token.saveToken(null);\n                this.props.history.push(\"/\");\n            }\n        }).catch(err => {\n            const token = new Token();\n            token.saveToken(null);\n            this.props.history.push(\"/\");\n        });\n    }\n\n    getMessages() {\n        return fetch(`${window.location.origin.toString()}/api/messages`)\n        .then(response => response.json())\n        .then(data => {\n            data = data.reverse();\n            console.log(data);\n            this.setState({\n                anon: this.state.anon,\n                messages: data,\n                loading: false\n            });\n        });\n    }\n\n    handleKeyPress(e) {\n        if (e.charCode !== 13) {\n            return;\n        }\n        const message = e.target.value;\n        e.target.value = \"\";\n        console.log(message);\n        return fetch(`${window.location.origin.toString()}/api/message`, {\n            method: 'POST',\n            body: JSON.stringify({\n                message: message,\n                anon: this.state.anon._id,\n                mood: this.state.anon.avatar\n            }),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.getMessages();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    deleteMessage(id) {\n        return fetch(`${window.location.origin.toString()}/api/message/${id}/${this.state.anon._id}`, {\n            method: 'DELETE'\n        })\n        .then(response => response.json())\n        .then(data => {\n            this.getMessages();\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                <Spinner animation=\"grow\" variant=\"primary\" />\n                <Spinner animation=\"grow\" variant=\"secondary\" />\n                <Spinner animation=\"grow\" variant=\"success\" />\n                <Spinner animation=\"grow\" variant=\"danger\" />\n                <Spinner animation=\"grow\" variant=\"warning\" />\n                <Spinner animation=\"grow\" variant=\"info\" />\n                <Spinner animation=\"grow\" variant=\"light\" />\n                <Spinner animation=\"grow\" variant=\"dark\" />\n                </div>\n            );\n        }\n\n          \n        \n\n        const image = require(`../assets/images/emojis/${this.state.anon.avatar}.png`);\n        return (\n\n            <Row>\n                <Col m={12} s={12} l={12}>\n                <Card header={<CardTitle />} actions={[<a />]}>\n                        <Image src={image} roundedCircle />\n\n                                    \n                        <InputGroup onKeyPress={this.handleKeyPress.bind(this)} className=\"mb-3\">\n                            \n                            <InputGroup.Text>\n                            What's on your mind?\n                            </InputGroup.Text>\n                            \n                            <Emoji />\n                            \n                        </InputGroup>\n                    \n                </Card>\n                </Col>\n                \n                <Col m={12} s={12} l={12}>\n                {this.state.messages.map(message =>\n                    <MessageView message={message} deleteCallback={this.deleteMessage.bind(this)} owned={this.state.anon._id === message.anon} />\n                )}\n                </Col>\n                </Row>\n            \n        );\n    }\n}","import React from 'react'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport Home from './Home'\nimport Login from './Login'\nimport Messages from './Messages'\n\nconst Main = () => (\n  <main>\n    <BrowserRouter>\n    <Switch>\n      <Route exact path='/' component={Home}/>\n      <Route path='/login' component={Login}/>\n      <Route path='/messages' component={Messages}/>\n    </Switch>\n    </BrowserRouter>\n  </main>\n)\n\nexport default Main\n","//sets up the reusable Navbar component\nimport \"./navbar.scss\";\nimport React from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { Navbar, NavItem } from \"react-materialize\";\n\n\n\nfunction Navbarrender() {\n  return (\n<Navbar brand={<a />} alignLinks=\"right\" className=\"navbarcolor\">\n  <img src=\"https://i.pinimg.com/originals/20/c7/bc/20c7bcfe40f464961ed209e3deadf8b6.png\" className=\"navbarlogo\" height=\"100px\" width=\"100px\"></img>\n<NavItem href=\"components.html\" class=\"white-text\">\nLog Out\n</NavItem>\n</Navbar>\n  );\n}\n\nexport default Navbarrender;\n\n\n\n\n","/* eslint-disable no-undef */\n/* eslint-disable jsx-a11y/alt-text */\nimport \"./Jumbotron.css\";\nimport React from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport { Section, Button, Modal, trigger} from \"react-materialize\";\n\n\n\nfunction Parallaxrender() {\n\treturn (\n\n  <Section>\n\n  <Section className=\"parallax\">\n    <h1 className=\"title\">Shower Thoughts</h1>\n    </Section>\n  \n \n  </Section>\n\n\t)\n  }\n\nexport default Parallaxrender;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Blockquote.css';\n\n/**\n * Appears as a raised card with the content of a given quote as\n * well as the quote's author\n */\nconst Blockquote = props => {\n    const { author, children } = props;\n    return (\n        <div className=\"Blockquote\">\n            <blockquote className=\"Blockquote__quotation\">\n                {children}\n            </blockquote>\n            <span className=\"Blockquote__author\">&mdash; {author}</span>\n        </div>\n    );\n};\n\nexport default Blockquote;\n\nBlockquote.propTypes = {\n    /** Author of the quote inserted with the `children` prop */\n    author: PropTypes.string.isRequired,\n    /** Content for the blockquote */\n    children: PropTypes.any.isRequired,\n};\n","/**\n * Get a CSS class based on the name of the component and the desired\n * color/variant. Uses BEM naming convention.\n *\n * @param {string} component Name of the component for the modifiers\n * @param {string} color Lowercase string for the color modifier\n * @param {string} variant Lowercase string for the variant modifier, is added to the end of the color modifier\n */\nconst getDisplayClassName = (component, color, variant) => {\n    const transformedColor = color === 'default' ? 'grey' : color;\n    const colorClassName = `${component}--${transformedColor}`;\n\n    if (variant && variant !== 'default') return `${colorClassName}--${variant}`;\n    return colorClassName;\n};\n\nexport default getDisplayClassName;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport getDisplayClassName from './getDisplayClassName';\nimport './Button.css';\n\n/**\n * Button that uses the HTML `<button>` element as its base. Allows for a \n * color and variant from a set list to be provided.\n */\nconst Button = props => {\n    const { buttonClasses, children, color, variant, ...rest } = props;\n    const buttonDisplayClassName = getDisplayClassName('Button', color, variant); // Get CSS class for color and variant of the button\n\n    return (\n        <button className={classnames('Button', buttonDisplayClassName, buttonClasses)} {...rest}>\n            <span className=\"Button__label\">{children}</span>\n        </button>\n    );\n};\n\nexport default Button;\n\nButton.propTypes = {\n    /** Extra CSS classes to attach to the HTML `<button>` */\n    buttonClasses: PropTypes.string,\n    /** Content for the button */\n    children: PropTypes.any.isRequired,\n    /** Different colors for a button */\n    color: PropTypes.oneOf(['default', 'primary']),\n    /** Different variations of a given color scheme for a button */\n    variant: PropTypes.oneOf(['default', 'contained']),\n};\n\nButton.defaultProps = {\n    buttonClasses: '',\n    color: 'default',\n    variant: 'default',\n};\n","/**\n * Generate a random string of alphanumeric characters that\n * can be used as part of a unique key or id\n *\n * @author Xuejia Chen <570171025@qq.com>\n *\n * @see {@link https://gist.github.com/6174/6062387} for original answer\n */\nconst generateRandomString = () => {\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\n};\n\nexport default generateRandomString;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport generateRandomString from './generateRandomString';\nimport getDisplayClassName from './getDisplayClassName';\nimport './Tag.css';\n\n/**\n * Represents an attribute a quote can be labelled with. Allows for a \n * color and variant from a set list to be provided.\n */\nconst Tag = props => {\n    const { color, inputName, isChecked, tagClasses, text, variant } = props;\n    const checkboxId = `${inputName}_${generateRandomString()}`;\n    const tagDisplayClassName = getDisplayClassName('Tag', color, variant); // Get CSS class for color and variant of the tag\n\n    return (\n        <div className={classnames('Tag', tagDisplayClassName, tagClasses)}>\n            {isChecked ?\n            <input className=\"Tag__checkbox\" type=\"checkbox\" name={inputName} id={checkboxId} checked />\n            :\n            <input className=\"Tag__checkbox\" type=\"checkbox\" name={inputName} id={checkboxId} />}\n            <label className=\"Tag__button\" htmlFor={checkboxId}>\n                <span className=\"Tag__text\">\n                    {text}\n                </span>\n            </label>\n        </div>\n    );\n};\n\nexport default Tag;\n\nTag.propTypes = {\n    /** Color options for a tag */\n    color: PropTypes.oneOf(['default']),\n    /**\n     * Name for the checkbox HTML `<input />`, also used as part of an ID\n     * for the checkbox HTML `<input />`\n     */\n    inputName: PropTypes.string.isRequired,\n    /** Determines whether the checkbox is checked on page load */\n    isChecked: PropTypes.bool,\n    /** Extra CSS classes to attach to the containing HTML `<div>` */\n    tagClasses: PropTypes.string,\n    /** User-facing text for the tag */\n    text: PropTypes.string.isRequired,\n    /** Different variations of a given color scheme for a tag */\n    variant: PropTypes.oneOf(['default', 'outline']),\n};\n\nTag.defaultProps = {\n    color: 'default',\n    isChecked: false,\n    tagClasses: '',\n    variant: 'default',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport Tag from './Tag';\nimport generateRandomString from './generateRandomString';\nimport './Form.css';\n\n/**\n * Form that provides interface for users to generate quotes and/or filter quotes to\n * generate by tag.\n */\nconst Form = props => {\n    const {\n        submitButtonColor,\n        submitButtonText,\n        submitButtonVariant,\n        tagColor,\n        tags,\n        tagVariant,\n        ...rest } = props;\n\n    return (\n        <form {...rest}>\n            <Button\n                color={submitButtonColor}\n                type=\"submit\"\n                variant={submitButtonVariant}\n            >\n                {submitButtonText}\n            </Button>\n            {tags.length > 0 ?\n            <div className=\"Form__inline-input-container\">\n                {tags.map((tag) => {\n                    const tagInputName = tag.replace(/\\s/g, ''); // Eliminate any spaces within the tag label\n                    return (\n                        <Tag\n                            color={tagColor}\n                            inputName={tagInputName}\n                            key={`tag_${generateRandomString()}`}\n                            tagClasses=\"Form__inline-input-container__input\"\n                            text={tag}\n                            variant={tagVariant}\n                        />\n                    );\n                })}\n            </div> : ''\n            }\n        </form>\n    );\n};\n\nexport default Form;\n\nForm.propTypes = {\n    /** \n     * Color of the submit button. \n     * Must match one of the options in the `PropTypes.oneOf()` array in `Button.jsx`\n     */\n    submitButtonColor: PropTypes.string,\n    /** Text for the submit button */\n    submitButtonText: PropTypes.string,\n    /** \n     * Variant of the submit button. \n     * Must match one of the options in the `PropTypes.oneOf()` array in `Button.jsx`\n     */\n    submitButtonVariant: PropTypes.string,\n    /** \n     * Color for each tag (available when the `tags` prop has at least one value). \n     * Must match one of the options in the `PropTypes.oneOf()` array in `Tag.jsx`\n     */\n    tagColor: PropTypes.string,\n    /** Array of tag labels */\n    tags: PropTypes.arrayOf(PropTypes.string),\n    /** \n     * Variant for each tag (available when the `tags` prop has at least one value). \n     * Must match one of the options in the `PropTypes.oneOf()` array in `Tag.jsx`\n     */\n    tagVariant: PropTypes.string,\n};\n\nForm.defaultProps = {\n    submitButtonColor: 'default',\n    submitButtonText: 'Submit',\n    submitButtonVariant: 'default',\n    tagColor: 'default',\n    tags: [],\n    tagVariant: 'default',\n};\n","import quotesData from '../data/quotes.json';\n\n/**\n * @classdesc Class with static methods for retrieving quotes, quote data, and tags.\n */\nclass QuoteService {\n    /**\n     * Filter for quotes labelled with tags selected by the user. Returns\n     * an array of quotes that contain at least one tag from the\n     * `selectedTags` array.\n     *\n     * @param {string[]} selectedTags List of tags selected by the user\n     */\n    static getQuotesBySelectedTags(selectedTags) {\n        if (selectedTags.length < 1) return quotesData; // Only filter results if any tags were selected\n\n        const filteredQuotes = [];\n\n        for (const quote of quotesData) {\n            for (const tag of quote.tags) {\n                if (selectedTags.indexOf(tag) > -1) { // Check if this tag matches one of the tags selected by the user\n                    filteredQuotes.push(quote); // If it does, push the `quote` into `filteredQuotes`\n                    break; // End the loop so the quote isn't added more than once\n                }\n            }\n        }\n\n        return filteredQuotes;\n    }\n\n    /**\n     * Returns a random number between `0` and the number of quotes to be picked from\n     * @param {number} quoteArrayLength Number of quotes that can be randomly picked from\n     */\n    static getRandomQuoteIndex(quoteArrayLength) {\n        return Math.floor(Math.random() * Math.floor(quoteArrayLength));\n    }\n\n    /**\n     * Returns an array of each unique instance of a tag from the source data\n     */\n    static getUniqueTags() {\n        const uniqueTags = [];\n\n        for (const quote of quotesData) {\n            for (const tag of quote.tags) {\n                if (uniqueTags.indexOf(tag) === -1) uniqueTags.push(tag); // Push tag into array if it isn't there already\n            }\n        }\n\n        return uniqueTags;\n    }\n}\n\nexport default QuoteService;\n","import React, { Component } from 'react';\nimport Blockquote from './Blockquote';\nimport Button from './Button';\nimport Form from './Form';\nimport QuoteService from './services/QuoteService';\nimport './quote.css';\n\nclass Quote extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuote: null,\n      tags: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ tags: QuoteService.getUniqueTags().sort() }); // Get the tags for the user to pick from, sorted alphabetically\n  }\n\n  /**\n   * Returns the submitted `formData` as an object\n   */\n  getFormDataObject = formData => {\n    const data = {};\n    for (const key of formData.keys()) {\n      data[key] = formData.get(key);\n    }\n    return data;\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentQuote: null,\n    });\n  };\n  \n  handleSubmit = event => {\n    event.preventDefault(); // Prevent page from reloading\n    const data = this.getFormDataObject(new FormData(event.target));\n    const selectedTags = Object.keys(data);\n    const filteredQuotes = QuoteService.getQuotesBySelectedTags(selectedTags);\n    // Is either the single quote in `filteredQuotes` or a random quote if the length of `filteredQuotes` is larger than `1`\n    let randomQuote = filteredQuotes.length === 1 ? filteredQuotes[0] : filteredQuotes[QuoteService.getRandomQuoteIndex(filteredQuotes.length)];\n\n    this.setState({\n      currentQuote: {\n        author: randomQuote.author.name,\n        tags: randomQuote.tags,\n        text: randomQuote.text,\n      },\n    });\n  };\n\n  render() {\n    const { currentQuote, tags } = this.state;\n\n    return (\n      <React.Fragment>\n        {!currentQuote ?\n        <Form\n          className=\"container\"\n          onSubmit={this.handleSubmit}\n          submitButtonColor=\"primary\"\n          submitButtonText=\"Generate quote\"\n          submitButtonVariant=\"contained\"\n          tags={tags}\n          tagVariant=\"outline\"\n        /> : ''}\n        {currentQuote ?\n        <div className=\"container\">\n          <Button\n            buttonClasses=\"margin-bottom--sm\"\n            color=\"primary\"\n            onClick={this.handleReset}\n            type=\"reset\"\n          >\n            <span className=\"icon--lg margin-right--xs\">\n              &laquo;\n            </span>\n            Generate another\n          </Button>\n          <Blockquote author={currentQuote.author}>\n              {currentQuote.text}\n          </Blockquote>\n          {currentQuote.tags && currentQuote.tags.length > 0 ?\n          <React.Fragment>\n            <small className=\"color--grey font-size--sm margin-top--sm\">Tags for this quote:\n              {currentQuote.tags.map((tag, index) => {\n                // List tags for this quote, insert comma after each if not the last tag\n                return ` \"${tag}${(index + 1) !== currentQuote.tags.length ? '\", ' : '\"'}`;\n              })}\n            </small>\n          </React.Fragment> : ''}\n        </div> : ''}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Quote;\n","import React, { Component } from \"react\";\nimport M from \"materialize-css\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport \"./InspirationModal.css\";\nimport Quote from './quote';\n\n\n\nclass Modal extends Component {\n  componentDidMount() {\n    const options = {\n      onOpenStart: () => {\n        console.log(\"Open Start\");\n      },\n      onOpenEnd: () => {\n        console.log(\"Open End\");\n      },\n      onCloseStart: () => {\n        console.log(\"Close Start\");\n      },\n      onCloseEnd: () => {\n        console.log(\"Close End\");\n      },\n      inDuration: 250,\n      outDuration: 250,\n      opacity: 0.5,\n      dismissible: false,\n      startingTop: \"4%\",\n      endingTop: \"10%\"\n    };\n    M.Modal.init(this.Modal, options);\n    // If you want to work on instance of the Modal then you can use the below code snippet \n    // let instance = M.Modal.getInstance(this.Modal);\n    // instance.open();\n    // instance.close();\n    // instance.destroy();\n  }\n\n  render() {\n    return (\n      <>\n        <a\n          className=\"waves-effect waves-light btn modal-trigger inspirationModalBTN\"\n          data-target=\"modal1\"\n        >\n          NEED INSPIRATION?\n        </a>\n\n        <div\n          ref={Modal => {\n            this.Modal = Modal;\n          }}\n          id=\"modal1\"\n          className=\"modal\"\n        >\n          {/* If you want Bottom Sheet Modal then add \n        bottom-sheet class */}\n          <div className=\"modal-content\">\n            <h4>Generate a Quote Below!</h4>\n            <Quote />\n          </div>\n          <div class=\"modal-footer\">\n            <a href=\"#\" class=\"modal-close waves-effect waves-red btn-flat\">\n              Close\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Modal;","import React from 'react'\nimport Main from './Main'\nimport Navbar from \"./Navbar\"\nimport Jumbotron from \"./Jumbotron\"\nimport InspirationModal from './InspirationModal'\n\n\nconst App = () => (\n  <div>\n    <Navbar\n        />\n    <Jumbotron\n        />\n    <InspirationModal\n        />\n    <Main />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './components/App';\n\nrender((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));"],"sourceRoot":""}